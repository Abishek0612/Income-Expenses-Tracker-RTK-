{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL.js\";\nconst initialState = {\n  loading: false,\n  error: null,\n  users: [],\n  user: {},\n  profiles: {},\n  userAuth: {\n    loading: false,\n    error: null,\n    userInfo: {}\n  }\n};\n\n//create action creator - createAsyncThunk\n\n//register\nexport const registerUserAction = createAsyncThunk(\"user/register\", async (_ref, // payload we are passing next to baseURL\n_ref2) => {\n  let {\n    fullname,\n    email,\n    password\n  } = _ref;\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref2;\n  try {\n    //header\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.post(`${baseURL}/users/register`, {\n      fullname,\n      //payload which we have destructured above\n      email,\n      password\n    }, config);\n    return res.data;\n  } catch (error) {\n    return;\n    rejectWithValue(error.response.data);\n  }\n});\n\n//users slice\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  extraReducers: builder => {\n    //Register\n    //pending\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    //fullfilled\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.loading = false, state.userAuth.userInfo = action.payload;\n    });\n    //rejected\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      state.loading = false, state.userAuth.error = action.error;\n    });\n  }\n});\n\n//generate  reducer\nconst usersReducer = usersSlice.reducer;\nexport default usersReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","baseURL","initialState","loading","error","users","user","profiles","userAuth","userInfo","registerUserAction","_ref","_ref2","fullname","email","password","rejectWithValue","getState","dispatch","config","headers","res","post","data","response","usersSlice","name","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","usersReducer","reducer"],"sources":["C:/Users/uabis/OneDrive/Desktop/practice/onGoing projects/income-expenses (RTK)/src/redux/slice/users/usersSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport baseURL from \"../../../utils/baseURL.js\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  users: [],\r\n  user: {},\r\n  profiles: {},\r\n  userAuth: {\r\n    loading: false,\r\n    error: null,\r\n    userInfo: {},\r\n  },\r\n};\r\n\r\n//create action creator - createAsyncThunk\r\n\r\n//register\r\nexport const registerUserAction = createAsyncThunk(\r\n  \"user/register\",\r\n  async (\r\n    { fullname, email, password }, // payload we are passing next to baseURL\r\n    { rejectWithValue, getState, dispatch }\r\n  ) => {\r\n    try {\r\n      //header\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const res = await axios.post(\r\n        `${baseURL}/users/register`,\r\n        {\r\n          fullname, //payload which we have destructured above\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n      return res.data;\r\n    } catch (error) {\r\n      return;\r\n      rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n//users slice\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    //Register\r\n    //pending\r\n    builder.addCase(registerUserAction.pending, (state, action) => {\r\n      state.loading = true;\r\n    });\r\n    //fullfilled\r\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\r\n      (state.loading = false), (state.userAuth.userInfo = action.payload);\r\n    });\r\n    //rejected\r\n    builder.addCase(registerUserAction.rejected, (state, action) => {\r\n      (state.loading = false), (state.userAuth.error = action.error);\r\n    });\r\n  },\r\n});\r\n\r\n//generate  reducer\r\nconst usersReducer = usersSlice.reducer;\r\nexport default usersReducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,CAAC,CAAC;EACRC,QAAQ,EAAE,CAAC,CAAC;EACZC,QAAQ,EAAE;IACRL,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,IAAI;IACXK,QAAQ,EAAE,CAAC;EACb;AACF,CAAC;;AAED;;AAEA;AACA,OAAO,MAAMC,kBAAkB,GAAGZ,gBAAgB,CAChD,eAAe,EACf,OAAAa,IAAA,EACiC;AAAAC,KAAA,KAE5B;EAAA,IAFH;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAAA,IAC7B;IAAEK,eAAe;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAN,KAAA;EAEvC,IAAI;IACF;IACA,MAAMO,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CACzB,GAAErB,OAAQ,iBAAgB,EAC3B;MACEY,QAAQ;MAAE;MACVC,KAAK;MACLC;IACF,CAAC,EACDI,MACF,CAAC;IACD,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOnB,KAAK,EAAE;IACd;IACAY,eAAe,CAACZ,KAAK,CAACoB,QAAQ,CAACD,IAAI,CAAC;EACtC;AACF,CACF,CAAC;;AAED;AACA,MAAME,UAAU,GAAG1B,WAAW,CAAC;EAC7B2B,IAAI,EAAE,OAAO;EACbxB,YAAY;EACZyB,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACA;IACAA,OAAO,CAACC,OAAO,CAACnB,kBAAkB,CAACoB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7DD,KAAK,CAAC5B,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACF;IACAyB,OAAO,CAACC,OAAO,CAACnB,kBAAkB,CAACuB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9DD,KAAK,CAAC5B,OAAO,GAAG,KAAK,EAAI4B,KAAK,CAACvB,QAAQ,CAACC,QAAQ,GAAGuB,MAAM,CAACE,OAAQ;IACrE,CAAC,CAAC;IACF;IACAN,OAAO,CAACC,OAAO,CAACnB,kBAAkB,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7DD,KAAK,CAAC5B,OAAO,GAAG,KAAK,EAAI4B,KAAK,CAACvB,QAAQ,CAACJ,KAAK,GAAG4B,MAAM,CAAC5B,KAAM;IAChE,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;AACA,MAAMgC,YAAY,GAAGX,UAAU,CAACY,OAAO;AACvC,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}